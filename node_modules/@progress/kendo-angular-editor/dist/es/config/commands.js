import { undo, redo } from 'prosemirror-history';
import { schema } from './schema';
import { alignLeftRules, alignCenterRules, alignRightRules, alignRemoveRules } from './align-rules';
import { removeMark, toggleBold, toggleItalic, toggleUnderline, toggleStrikethrough, alignBlocks, createLink, format, indent, outdent, getHTML, setHTML, insertImage, toggleSubscript, toggleSuperscript } from '../prosemirror-utils';
import { toggleOrderedList, toggleUnorderedList } from '../prosemirror-list-utils';
var inlineCommand = {
    bold: function () { return toggleBold; },
    italic: function () { return toggleItalic; },
    createLink: function (attr) { return createLink(attr); },
    unlink: function () { return removeMark(schema.marks.link); },
    underline: function () { return toggleUnderline; },
    strikethrough: function () { return toggleStrikethrough; },
    subscript: function () { return toggleSubscript; },
    superscript: function () { return toggleSuperscript; }
};
var blockCommand = {
    format: function (formatAttr) { return format(formatAttr); },
    alignLeft: function () { return alignBlocks(alignLeftRules); },
    alignCenter: function () { return alignBlocks(alignCenterRules); },
    alignRight: function () { return alignBlocks(alignRightRules); },
    alignJustify: function () { return alignBlocks(alignRemoveRules); },
    indent: function () { return indent; },
    outdent: function () { return outdent; },
    // think about changing the command name.
    insertOrderedList: function () { return toggleOrderedList; },
    // think about changing the command name.
    insertUnorderedList: function () { return toggleUnorderedList; },
    getHTML: function () { return getHTML; },
    setHTML: function (content) { return setHTML(content); },
    undo: function () { return undo; },
    redo: function () { return redo; },
    insertImage: function (attrs) { return insertImage(attrs); }
};
/**
 * @hidden
 */
export var editorCommands = Object.assign({}, inlineCommand, blockCommand);
