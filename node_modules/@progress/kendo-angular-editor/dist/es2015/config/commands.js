import { undo, redo } from 'prosemirror-history';
import { schema } from './schema';
import { alignLeftRules, alignCenterRules, alignRightRules, alignRemoveRules } from './align-rules';
import { removeMark, toggleBold, toggleItalic, toggleUnderline, toggleStrikethrough, alignBlocks, createLink, format, indent, outdent, getHTML, setHTML, insertImage, toggleSubscript, toggleSuperscript } from '../prosemirror-utils';
import { toggleOrderedList, toggleUnorderedList } from '../prosemirror-list-utils';
const inlineCommand = {
    bold: () => toggleBold,
    italic: () => toggleItalic,
    createLink: (attr) => createLink(attr),
    unlink: () => removeMark(schema.marks.link),
    underline: () => toggleUnderline,
    strikethrough: () => toggleStrikethrough,
    subscript: () => toggleSubscript,
    superscript: () => toggleSuperscript
};
const blockCommand = {
    format: (formatAttr) => format(formatAttr),
    alignLeft: () => alignBlocks(alignLeftRules),
    alignCenter: () => alignBlocks(alignCenterRules),
    alignRight: () => alignBlocks(alignRightRules),
    alignJustify: () => alignBlocks(alignRemoveRules),
    indent: () => indent,
    outdent: () => outdent,
    // think about changing the command name.
    insertOrderedList: () => toggleOrderedList,
    // think about changing the command name.
    insertUnorderedList: () => toggleUnorderedList,
    getHTML: () => getHTML,
    setHTML: (content) => setHTML(content),
    undo: () => undo,
    redo: () => redo,
    insertImage: (attrs) => insertImage(attrs)
};
/**
 * @hidden
 */
export const editorCommands = Object.assign({}, inlineCommand, blockCommand);
