"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var kendo_angular_dialog_1 = require("@progress/kendo-angular-dialog");
var schema_1 = require("../config/schema");
var prosemirror_utils_1 = require("../prosemirror-utils");
/**
 * @hidden
 */
var LinkDialogComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LinkDialogComponent, _super);
    function LinkDialogComponent(dialog) {
        var _this = _super.call(this, dialog) || this;
        _this.dialog = dialog;
        _this.data = { href: '', title: '', target: undefined };
        return _this;
    }
    LinkDialogComponent.prototype.onCancelAction = function () {
        this.dialog.close();
    };
    LinkDialogComponent.prototype.onConfirmAction = function () {
        this.editor.exec('createLink', this.getData());
        this.dialog.close();
        this.editor.focus();
    };
    LinkDialogComponent.prototype.setData = function (state) {
        var mark = prosemirror_utils_1.getMark(state, schema_1.schema.marks.link);
        if (mark) {
            this.data = {
                href: mark.attrs.href,
                title: mark.attrs.title,
                target: mark.attrs.target
            };
        }
    };
    LinkDialogComponent.prototype.getData = function () {
        return {
            href: this.href.nativeElement.value || undefined,
            title: this.title.nativeElement.value || undefined,
            target: this.target.nativeElement.checked ? '_blank' : undefined
        };
    };
    LinkDialogComponent.decorators = [
        { type: core_1.Component, args: [{
                    template: "\n        <kendo-dialog-titlebar>\n            Insert Link\n        </kendo-dialog-titlebar>\n        <div class=\"k-editor-dialog\">\n            <div class=\"k-editor-dialog k-popup-edit-form k-window-content k-content\" >\n                <div class=\"k-edit-form-container k-window-content\">\n                    <div class=\"k-edit-label\">\n                        <label for=\"k-editor-link-url\">Web address</label>\n                    </div>\n                    <div class=\"k-edit-field\">\n                        <input #href [value]=\"data.href\" type=\"text\" class=\"k-input k-textbox\">\n                    </div>\n                    <div class=\"k-edit-label k-editor-link-text-row\">\n                        <label for=\"k-editor-link-text\">Title</label>\n                    </div>\n                    <div class=\"k-edit-field k-editor-link-text-row\">\n                        <input #title [value]=\"data.title\" type=\"text\" class=\"k-input k-textbox\">\n                    </div>\n                    <div class=\"k-edit-field\">\n                        <input #target type=\"checkbox\" class=\"k-checkbox\">\n                        <label for=\"k-editor-link-target\" class=\"k-checkbox-label\">Open link in new window</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <kendo-dialog-actions>\n            <button kendoButton (click)=\"onCancelAction()\">Cancel</button>\n            <button kendoButton (click)=\"onConfirmAction()\" [primary]=\"true\">Insert</button>\n        </kendo-dialog-actions>\n    "
                },] },
    ];
    /** @nocollapse */
    LinkDialogComponent.ctorParameters = function () { return [
        { type: kendo_angular_dialog_1.DialogRef, },
    ]; };
    LinkDialogComponent.propDecorators = {
        'editor': [{ type: core_1.Input },],
        'href': [{ type: core_1.ViewChild, args: ['href',] },],
        'title': [{ type: core_1.ViewChild, args: ['title',] },],
        'target': [{ type: core_1.ViewChild, args: ['target',] },],
    };
    return LinkDialogComponent;
}(kendo_angular_dialog_1.DialogContentBase));
exports.LinkDialogComponent = LinkDialogComponent;
