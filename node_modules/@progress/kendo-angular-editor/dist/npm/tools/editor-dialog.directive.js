"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var kendo_angular_toolbar_1 = require("@progress/kendo-angular-toolbar");
var command_icons_1 = require("../config/command-icons");
var editor_component_1 = require("../editor.component");
/**
 * A directive which configures an existing `ToolBarButtonComponent` as an Editor tool
 * ([see example]({% slug toolbartools_editor %}#toc-built-in-tools)). `kendoEditorDialog` predefines
 * the `icon` and the dialog type that will be open on `click`. In addition,
 * the directive updates the `selected` or `disabled` state of the button while the user is editing.
 *
 * @example
 * ```ts-no-run
 * <kendo-toolbar-button kendoEditorDialog="viewSource"></kendo-toolbar-button>
 * ```
 *
 * The following example demonstrates how to change the default icon that is applied by the directive.
 *
 * @example
 * ```ts-no-run
 * <kendo-toolbar-button kendoEditorDialog="viewSource" icon="blogger"></kendo-toolbar-button>
 * ```
 */
var EditorDialogDirective = /** @class */ (function () {
    function EditorDialogDirective(button, editor) {
        this.button = button;
        this.editor = editor;
    }
    EditorDialogDirective.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.button.icon) {
            this.button.icon = command_icons_1.commandIcons[this.command];
        }
        this.subs = this.button.click.subscribe(function () {
            _this.editor.openDialog(_this.command);
        });
        this.subs.add(this.editor.stateChange.subscribe(function (state) {
            if (_this.command === 'createLink') {
                _this.button.disabled = state.link ? false : state.noSelection;
            }
        }));
    };
    EditorDialogDirective.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    EditorDialogDirective.decorators = [
        { type: core_1.Directive, args: [{
                    selector: 'kendo-toolbar-button[kendoEditorDialog]'
                },] },
    ];
    /** @nocollapse */
    EditorDialogDirective.ctorParameters = function () { return [
        { type: kendo_angular_toolbar_1.ToolBarButtonComponent, },
        { type: editor_component_1.EditorComponent, decorators: [{ type: core_1.Host },] },
    ]; };
    EditorDialogDirective.propDecorators = {
        'command': [{ type: core_1.Input, args: ['kendoEditorDialog',] },],
    };
    return EditorDialogDirective;
}());
exports.EditorDialogDirective = EditorDialogDirective;
