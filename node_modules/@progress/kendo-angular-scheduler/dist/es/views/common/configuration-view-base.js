import * as tslib_1 from "tslib";
import { ViewChild, ContentChild } from '@angular/core';
import { SchedulerView } from '../../types';
import { EventTemplateDirective, GroupHeaderTemplateDirective } from '../templates';
/**
 * @hidden
 */
var ConfigurationViewBase = /** @class */ (function (_super) {
    tslib_1.__extends(ConfigurationViewBase, _super);
    function ConfigurationViewBase(localization, changeDetector) {
        var _this = _super.call(this) || this;
        _this.localization = localization;
        _this.subs = _this.localization.changes.subscribe(function (_a) {
            var rtl = _a.rtl;
            changeDetector.markForCheck();
        });
        return _this;
    }
    ConfigurationViewBase.prototype.ngOnDestroy = function () {
        this.subs.unsubscribe();
    };
    ConfigurationViewBase.propDecorators = {
        'template': [{ type: ViewChild, args: ['content',] },],
        'eventTemplate': [{ type: ContentChild, args: [EventTemplateDirective,] },],
        'groupHeaderTemplate': [{ type: ContentChild, args: [GroupHeaderTemplateDirective,] },],
    };
    return ConfigurationViewBase;
}(SchedulerView));
export { ConfigurationViewBase };
