"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var kendo_angular_dialog_1 = require("@progress/kendo-angular-dialog");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
var map_1 = require("rxjs/operators/map");
/**
 * @hidden
 */
var DialogsService = /** @class */ (function () {
    function DialogsService(dialogService, localization, changeDetector) {
        this.dialogService = dialogService;
        this.localization = localization;
        this.changeDetector = changeDetector;
    }
    DialogsService.prototype.openRemoveConfirmationDialog = function () {
        var dialog = this.dialogService.open({
            title: this.textFor('deleteDialogTitle'),
            content: this.textFor('deleteConfirmation'),
            actions: [
                { text: this.textFor('cancel'), value: false },
                { text: this.textFor('destroy'), value: true }
            ],
            appendTo: this.container
        });
        this.changeDetector.markForCheck();
        return dialog.result.pipe(map_1.map(function (result) {
            if (result instanceof kendo_angular_dialog_1.DialogCloseResult) {
                return false;
            }
            var res = result;
            return res.value;
        }));
    };
    DialogsService.prototype.openRecurringConfirmationDialog = function (operation) {
        var dialog = this.dialogService.open({
            actions: [
                {
                    text: operation === 0 /* Edit */ ? this.textFor('editOccurrence') : this.textFor('deleteOccurrence'),
                    value: 1 /* Occurrence */
                },
                {
                    text: operation === 0 /* Edit */ ? this.textFor('editSeries') : this.textFor('deleteSeries'),
                    value: 2 /* Series */
                }
            ],
            appendTo: this.container,
            content: operation === 0 /* Edit */ ? this.textFor('editRecurringConfirmation') : this.textFor('deleteRecurringConfirmation'),
            title: operation === 0 /* Edit */ ? this.textFor('editRecurringDialogTitle') : this.textFor('deleteRecurringDialogTitle')
        });
        this.changeDetector.markForCheck();
        return dialog.result.pipe(map_1.map(function (result) {
            if (result instanceof kendo_angular_dialog_1.DialogCloseResult) {
                return undefined;
            }
            var res = result;
            return res.value;
        }));
    };
    DialogsService.prototype.textFor = function (key) {
        return this.localization.get(key);
    };
    DialogsService.decorators = [
        { type: core_1.Injectable },
    ];
    /** @nocollapse */
    DialogsService.ctorParameters = function () { return [
        { type: kendo_angular_dialog_1.DialogService, },
        { type: kendo_angular_l10n_1.LocalizationService, },
        { type: core_1.ChangeDetectorRef, },
    ]; };
    return DialogsService;
}());
exports.DialogsService = DialogsService;
