import { Component, forwardRef, ViewChild } from '@angular/core';
import { ToolBarToolComponent } from './toolbar-tool.component';
import { ToolNavigationService } from '../navigation/tool-navigation.service';
/**
 * Represents the [Kendo UI ToolBar Separator for Angular]({% slug controltypes_toolbar %}#toc-separators).
 */
export class ToolBarSeparatorComponent extends ToolBarToolComponent {
    constructor() {
        super();
        this.navigationService = new ToolNavigationService();
    }
    ngAfterViewInit() {
        if (!this.popupTemplate) {
            this.popupTemplate = this.toolbarTemplate;
        }
    }
}
ToolBarSeparatorComponent.decorators = [
    { type: Component, args: [{
                exportAs: 'kendoToolBarSeparator',
                // tslint:disable-next-line:no-forward-ref
                providers: [{ provide: ToolBarToolComponent, useExisting: forwardRef(() => ToolBarSeparatorComponent) }],
                selector: 'kendo-toolbar-separator',
                template: `
        <ng-template #toolbarTemplate>
        </ng-template>
    `
            },] },
];
/** @nocollapse */
ToolBarSeparatorComponent.ctorParameters = () => [];
ToolBarSeparatorComponent.propDecorators = {
    'toolbarTemplate': [{ type: ViewChild, args: ["toolbarTemplate",] },],
    'popupTemplate': [{ type: ViewChild, args: ["popupTemplate",] },],
    'separator': [{ type: ViewChild, args: ["separator",] },],
};
