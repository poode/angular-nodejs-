"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var core_1 = require("@angular/core");
var toolbar_tool_component_1 = require("./toolbar-tool.component");
/**
 * @hidden
 */
var ToolBarButtonListComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ToolBarButtonListComponent, _super);
    function ToolBarButtonListComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.itemClick = new core_1.EventEmitter();
        return _this;
    }
    ToolBarButtonListComponent.prototype.getText = function (dataItem) {
        if (dataItem) {
            return this.textField ? dataItem[this.textField] : dataItem.text || dataItem;
        }
        return undefined;
    };
    ToolBarButtonListComponent.prototype.onClick = function (item) {
        if (item.click) {
            item.click();
        }
        this.itemClick.emit(this.data.indexOf(item));
    };
    ToolBarButtonListComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'kendo-toolbar-buttonlist',
                    template: "\n        <button type=\"button\" tabindex=\"-1\" kendoButton\n            class=\"k-overflow-button\"\n            *ngFor=\"let item of data\"\n            [disabled]=\"item.disabled\"\n            [icon]=\"item.icon\"\n            [iconClass]=\"item.iconClass\"\n            [imageUrl]=\"item.imageUrl\"\n            (click)=\"onClick(item)\">\n            {{ getText(item) }}\n        </button>\n    "
                },] },
    ];
    /** @nocollapse */
    ToolBarButtonListComponent.ctorParameters = function () { return []; };
    ToolBarButtonListComponent.propDecorators = {
        'data': [{ type: core_1.Input },],
        'textField': [{ type: core_1.Input },],
        'itemClick': [{ type: core_1.Output },],
    };
    return ToolBarButtonListComponent;
}(toolbar_tool_component_1.ToolBarToolComponent));
exports.ToolBarButtonListComponent = ToolBarButtonListComponent;
