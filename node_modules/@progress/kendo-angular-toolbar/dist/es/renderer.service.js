import { Injectable } from '@angular/core';
import { findFocusable, findFocusableChild, findFocusableSibling } from './util';
/**
 * @hidden
 */
var RendererService = /** @class */ (function () {
    function RendererService() {
    }
    RendererService.prototype.getElement = function () {
        return this.element.nativeElement;
    };
    RendererService.prototype.querySelector = function (selector) {
        return this.element.nativeElement.querySelector(selector);
    };
    RendererService.prototype.querySelectorAll = function (selector) {
        return this.element.nativeElement.querySelectorAll(selector);
    };
    RendererService.prototype.findFocusable = function () {
        return findFocusable(this.element.nativeElement, false);
    };
    RendererService.prototype.findFocusableChild = function (element) {
        if (!element) {
            element = this.findFocusable();
        }
        return findFocusableChild(element, false);
    };
    RendererService.prototype.findNextFocusableSibling = function (element) {
        if (!element) {
            element = this.findFocusable();
        }
        return findFocusableSibling(element, false);
    };
    RendererService.prototype.findPrevFocusableSibling = function (element) {
        if (!element) {
            element = this.findFocusable();
        }
        return findFocusableSibling(element, false, true);
    };
    RendererService.prototype.setAttribute = function (element, attr, value) {
        this.renderer.setAttribute(element, attr, value);
    };
    RendererService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    RendererService.ctorParameters = function () { return []; };
    return RendererService;
}());
export { RendererService };
